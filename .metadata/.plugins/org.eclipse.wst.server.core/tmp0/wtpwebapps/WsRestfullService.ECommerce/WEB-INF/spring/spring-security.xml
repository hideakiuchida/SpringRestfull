<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.0.xsd">
             
	<security:http pattern="/authenticate" security="none" />

	<security:http realm="Protected API" use-expressions="true"
		auto-config="false" create-session="always" entry-point-ref="JwtAuthenticationEntryPoint">
		<security:custom-filter ref="jwtAuthenticationTokenFilter"
			position="PRE_AUTH_FILTER" />
		 <!--  <security:intercept-url pattern="/**" access="isAuthenticated()" /> -->
		 <security:intercept-url pattern="/list" access="hasRole('ROLE_ADMIN')" /> 
		 <security:intercept-url pattern="/new" access="hasRole('ROLE_USER')" /> 
	</security:http>

	<bean id="JwtAuthenticationEntryPoint"
		class="com.valmar.ecommerce.security.controller.JwtAuthenticationEntryPoint" />

	<bean class="com.valmar.ecommerce.security.controller.JwtAuthenticationTokenFilter"
		id="jwtAuthenticationTokenFilter">
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	
	<security:authentication-manager alias="authenticationManager" >
		 <security:authentication-provider
        	user-service-ref="userDetailsService" />
	</security:authentication-manager>
	
	 

</beans>