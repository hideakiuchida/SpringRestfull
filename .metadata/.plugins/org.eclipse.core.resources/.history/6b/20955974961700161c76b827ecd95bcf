package com.valmar.licoreria.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Repository;

import com.valmar.licoreria.model.Employee;

@Repository("employeeDao")
public class EmployeeDaoImpl implements EmployeeDao {
 
	@PersistenceContext
    private EntityManager entityManager;
	
    public Employee findById(int id) {
         Employee employee=null;         
         try{
             employee = (Employee) em.find(Employee.class, id);
             
         }catch(Exception e){
             e.printStackTrace();
         }                
         return employee;
    }
 
    public void saveEmployee(Employee employee) {
        em.persist(employee);
    }
 
    public void deleteEmployeeBySsn(String ssn) {
        Query query = getSession().createSQLQuery("delete from Employee where ssn = :ssn");
        query.setString("ssn", ssn);
        query.executeUpdate();
    }
 
    @SuppressWarnings("unchecked")
    public List<Employee> findAllEmployees() {
        Criteria criteria = createEntityCriteria();
        return (List<Employee>) criteria.list();
    }
 
    public Employee findEmployeeBySsn(String ssn) {
        Criteria criteria = createEntityCriteria();
        criteria.add(Restrictions.eq("ssn", ssn));
        return (Employee) criteria.uniqueResult();
    }
}
